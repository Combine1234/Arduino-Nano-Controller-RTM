# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QMainWindow, QVBoxLayout, QLabel, QComboBox, QPushButton, QMessageBox
from PyQt5.QtCore import Qt
import serial
import serial.tools.list_ports

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1117, 760)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(0, 0, 131, 121))
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap("img/RTM_logo.png"))
        self.label.setScaledContents(True)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(150, 20, 921, 91))
        font = QtGui.QFont()
        font.setFamily("PK Sukhothai")
        font.setPointSize(28)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(10, 150, 621, 371))
        self.label_3.setText("")
        self.label_3.setPixmap(QtGui.QPixmap("img/nano.png"))
        self.label_3.setScaledContents(True)
        self.label_3.setObjectName("label_3")

        self.comboBox = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox.setGeometry(QtCore.QRect(700, 130, 381, 31))
        self.comboBox.setObjectName("comboBox")
        self.refresh_ports()

        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(550, 100, 191, 91))
        font = QtGui.QFont()
        font.setFamily("PK Sukhothai")
        font.setPointSize(16)
        self.label_4.setFont(font)
        self.label_4.setTextFormat(QtCore.Qt.AutoText)
        self.label_4.setObjectName("label_4")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(650, 220, 61, 51))
        font = QtGui.QFont()
        font.setFamily("PK Sukhothai")
        font.setPointSize(16)
        self.label_6.setFont(font)
        self.label_6.setTextFormat(QtCore.Qt.AutoText)
        self.label_6.setObjectName("label_6")

        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(600, 170, 191, 41))
        font = QtGui.QFont()
        font.setFamily("PK Sukhothai")
        font.setPointSize(12)
        self.label_5.setFont(font)
        self.label_5.setTextFormat(QtCore.Qt.AutoText)
        self.label_5.setObjectName("label_5")
        self.btnSelect = QtWidgets.QPushButton(self.centralwidget)
        self.btnSelect.setGeometry(QtCore.QRect(1022, 170, 61, 31))
        self.btnSelect.setObjectName("btnSelect")
        self.btnSelect.setText("Select")
        self.btnSelect.clicked.connect(self.select_port)

        self.buttons = {}
        self.arduino = None

        # Creating buttons and labels dynamically
        button_positions = [
            ('D2', 230), ('D3', 270), ('D4', 310), ('D5', 350),
            ('D6', 390), ('D7', 430), ('D8', 470), ('D9', 510),
            ('D10', 550), ('D11', 590), ('D12', 630), ('D13', 670)
        ]

        for (name, y) in button_positions:
            label = QtWidgets.QLabel(self.centralwidget)
            label.setGeometry(QtCore.QRect(650, y - 10, 61, 51))
            font = QtGui.QFont()
            font.setFamily("PK Sukhothai")
            font.setPointSize(16)
            label.setFont(font)
            label.setText(name)
            label.setObjectName(f"label_{name}")

            button = QtWidgets.QPushButton(self.centralwidget)
            button.setGeometry(QtCore.QRect(700, y, 93, 31))
            button.setText("")
            button.setStyleSheet("background-color: red")  # Default to LOW state (red)
            button.setObjectName(f"btn{name}")
            button.clicked.connect(lambda checked, b=name: self.toggle_pin(b))

            self.buttons[name] = button

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1117, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Return To Monkey Kit : Arduino Nano controller"))
        self.label_2.setText(_translate("MainWindow", "RTM - Arduino Nano Controller"))
        self.label_4.setText(_translate("MainWindow", "Select Port"))
        self.label_5.setText(_translate("MainWindow", "Click on the port then select."))

    def refresh_ports(self):
        self.comboBox.clear()
        ports = serial.tools.list_ports.comports()
        for port in ports:
            self.comboBox.addItem(port.device)

    def select_port(self):
        port = self.comboBox.currentText()
        try:
            self.arduino = serial.Serial(port, 9600, timeout=1)
            QMessageBox.information(None, "Port Selected", f"Successfully connected to {port}")
        except Exception as e:
            QMessageBox.critical(None, "Error", f"Failed to connect to {port}\n{e}")

    def toggle_pin(self, pin_name):
        if not self.arduino:
            QMessageBox.critical(None, "Error", "Arduino not connected.")
            return

        pin_number = pin_name[1:]
        command = f"{pin_number}\n".encode()
        self.arduino.write(command)

        button = self.buttons[pin_name]
        current_style = button.styleSheet()

        if "background-color: red" in current_style:
            button.setStyleSheet("background-color: green")
        else:
            button.setStyleSheet("background-color: red")

if __name__ == "__main__":
    app = QApplication(sys.argv)
    MainWindow = QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
